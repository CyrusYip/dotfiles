" My old broken .vimrc:
" https://github.com/CyrusYip/dotfiles/blob/main/broken_config/dot_vimrc
" default configs[[[1
" Get the defaults that most users want.
source $VIMRUNTIME/defaults.vim
" backup, undo [[[2
if has("vms")
  set nobackup		" do not keep a backup file, use versions instead
else
  set backup		" keep a backup file (restore to previous version)
  if has('persistent_undo')
    " set undodir=~/.vim/undo_dir " todo: create dir if notexit
    set undofile	" keep an undo file (undo changes after closing)
  endif
endif
" ]]]
" hlsearch[[[2
if &t_Co > 2 || has("gui_running")
  " Switch on highlighting the last used search pattern.
  set hlsearch
endif
" ]]]
" autocmd group[[[2
" Put these in an autocmd group, so that we can delete them easily.
augroup vimrcEx
  au!

  " For all text files set 'textwidth' to 78 characters.
  autocmd FileType text setlocal textwidth=78
augroup END
" ]]]
" matchit[[[2
" Add optional packages.
"
" The matchit plugin makes the % command work better, but it is not backwards
" compatible.
" The ! means the package won't be loaded right away but when plugins are
" loaded during initialization.
if has('syntax') && has('eval')
  packadd! matchit
endif
" ]]]
" ]]]
" my configs[[[1
" number, clipboard[[[2
set clipboard^=unnamed,unnamedplus
set relativenumber numberwidth=1
autocmd FileType help setlocal relativenumber numberwidth=1
let g:netrw_bufsettings = 'relativenumber numberwidth=1 noma nomod ro nobl'
" set number relativenumber numberwidth=1
" autocmd FileType help setlocal number relativenumber numberwidth=1
" let g:netrw_bufsettings = 'number relativenumber numberwidth=1 noma nomod ro nobl'
"]]]
" indent, tab, case, whitespaces [[[2
" indent
set smartindent
set autoindent

" tab
" set smarttab
set tabstop=2       " The width of a TAB is set to 2.
set shiftwidth=2    " Indents will have a width of 2
" set softtabstop=2   " Sets the number of columns for a TAB
set expandtab       " Expand TABs to spaces

" case insensitive
set ignorecase smartcase

" whitespaces, prefer multispace to space
set listchars=eol:¬,tab:>␣,trail:~,extends:>,precedes:<
try
  set listchars+=multispace:···⬝
catch
  set listchars+=space:·
endtry
" space:·, space:␣ ,leadmultispace:---+
"set list
"]]]
" true color, background[[[2
" true color
if (has("termguicolors"))
  set termguicolors
endif
if $TERM == "xterm-256color"
  set t_Co=256
endif

" tmux color
set term=xterm-256color
if &term =~ '256color'
  " Disable Background Color Erase (BCE) so that color schemes work
  " properly within 256-color terminals
  set t_ut=
endif

" colorscheme
colorscheme slate
set laststatus=2
"]]]
" cursor shape[[[2
" https://stackoverflow.com/a/70135079/14399237
let &t_SI.="\e[5 q"
let &t_SR.="\e[3 q"
let &t_EI.="\e[1 q"
"]]]
" other[[[2
" filetype plugin
filetype plugin indent on

" switch buffers without saving
set hidden

" search all subdirectory of current directory
set path+=**

" wildmenu
set wildmode=longest:full,full
silent! set wildoptions=pum " ignore error in old Vim

" ask to save
set confirm

" show search count
set shortmess-=S

" remove intro message to reduce redrawing
set shortmess+=I

" make ctrl-d normal
set nostartofline

" auto wrap in vimdiff
au VimEnter * if &diff | execute 'windo set wrap' | endif

"
set autoread
set timeoutlen=500 " for vim-which-key
set nrformats+=alpha " manipulate alphabetical characters
" ]]]
" ]]]
" keybindings, commands[[[1
let mapleader = "\<space>"
nnoremap <leader>d :
vnoremap <leader>d :
nnoremap <silent> <esc><esc> :noh<return><esc>
" save and exit
nnoremap <silent> <leader>w :update<CR>
nnoremap <silent> <leader>W :wa<CR>
nnoremap <silent> <leader>c :q<CR>
nnoremap <silent> <leader>C :qa<CR>
nnoremap <silent> <leader>x :x<CR>
nnoremap <silent> <leader>X :xa<CR>
" search
nnoremap <leader>f /
vnoremap <leader>f /
nnoremap <leader>b ?
vnoremap <leader>b ?
" wrap
nnoremap <silent> <leader>rr :set wrap!<CR>
" list
nnoremap <silent> <leader>i :set list!<CR>
" plugin
" nnoremap <silent> <leader>s :AutoSaveToggle<CR>
" nnoremap <silent> <leader>l :LF<CR>
" nnoremap <silent> <leader>f :Files<CR>
" nnoremap <silent> <leader>j :JO<CR>
" nnoremap <silent> <leader>mf :TableFormat<CR>
" nnoremap <silent> <leader>mt :Toc<CR>
" nnoremap <silent> <leader> :WhichKey '<Space>'<CR>
" Cv: clean vim, used for fast macro replaying
command Cv silent! w | wviminfo | !vim -c 'set rnu nuw=1' -c 'file' --clean -i ~/.viminfo %
" CleanCocExtensions
command CleanCocExtensions !rm -r ~/.config/coc/extensions/ && echo 'removed'
" UP: upgrade all plugins and managers
command UP PlugClean | PlugUpdate | JetpackSync | PlugUpgrade | CocUpdate
" JO: copy Joplin note to another file
command JO w ~/Desktop/joplin-tmp.md | tabnew ~/Desktop/joplin-tmp.md | silent AutoSaveToggle
" ]]]

" fold this file with [[[ and ]]]
" vim:foldmethod=marker:foldmarker=[[[,]]]
