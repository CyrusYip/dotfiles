# shell, basic settings[[[1
# interpreter for shell commands
set shell sh
set shellopts '-eu'
set ifs "\n"
# basic settings
set relativenumber
set drawbox
set scrolloff 10
set hidden
set previewer ~/.config/lf/preview
# ]]]
# command[[[1
# custom 'rename' command
cmd rename2 %[ -e $1 ] && printf "file exists" || mv $f $1
# print selected
cmd ps !echo $fx | tr " " "\n"
# zoxide
cmd z %{{
  result="$(zoxide query --exclude "${PWD}" -- "$1")"
  lf -remote "send ${id} cd '${result}'"
}}
cmd zi ${{
  result="$(zoxide query -i -- "$1")"
  lf -remote "send ${id} cd '${result}'"
}}
# trash-cli
cmd trash ${{
  clear; tput cup $(($(tput lines)/3)); tput bold
  set -f
  printf "%s\n\t" "$fx"
  printf "trash?[y/N]"
  read ans
  [ $ans = "y" ] && trash-put $fx
}}
# fzf with vim
cmd fzf $vim $(fzf)
# open text files with $EDITOR
cmd open ${{
  test -L $f && f=$(readlink -f $f)
  case $(file --mime-type $f -b) in
    text/*) $EDITOR $fx;;
    *) for f in $fx; do setsid $OPENER $f > /dev/null 2> /dev/null & done;;
  esac
}}
# extract with ark
cmd extract ${{
  clear; tput cup $(($(tput lines)/3)); tput bold
  set -f
  printf "%s\n\t" "$fx"
  printf "extract?[y/N]"
  read ans
  [ $ans = "y" ] && ark --batch --autosubfolder $fx
}}
# ]]]
# map[[[1
# use enter for shell commands
map <enter> shell
# execute current file (must be executable)
map x $$f
map X !$f
# custom rename
map r push :rename2<space>
# pager
map i $LESSOPEN='| ~/.config/lf/preview %s' less -R $f
map I $bat --force-colorization --paging always $f || cat $f | less
# ]]]
# vim: foldmethod=marker foldmarker=[[[,]]] shiftwidth=2 expandtab
